---
import "@fontsource/arvo";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title?: string;
  onCardClick?: string;
  blackBackground?: boolean;
}

const { title, onCardClick, blackBackground } = Astro.props;
const currentUrl = Astro.url;

const duration = "0.6s";
const rotate = {
  old: {
    name: "spinOut",
    duration,
    easing: "ease-in",
  },
  new: {
    name: "spinIn",
    duration,
    delay: duration,
    easing: "ease-out",
  },
};

const Container = onCardClick ? "a" : "div";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Luke & Marnie are getting Married on the 14th June 2025."
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <title>Luke & Marnie's wedding {title ? ` - ${title}` : null}</title>
    <ViewTransitions />
  </head>
  <body
    class="flex h-svh w-screen min-w-[280px] flex-col items-center justify-center bg-green-800 p-4 sm:p-8 md:flex-row"
  >
    <Container
      transition:animate={{ forwards: rotate, backwards: rotate }}
      href={onCardClick}
      class={`max-h-full aspect-[1220/2000] rounded-lg border-2 w-full sm:w-auto sm:h-full
        border-black drop-shadow-2xl shadow-2xl
        ${blackBackground ? "bg-black py-1" : "bg-white p-2"}
        ${onCardClick ? "hover:animate-spin-tease" : ""}
        `}
    >
      <slot />
    </Container>
    {
      !currentUrl.pathname.includes("rsvp") && (
        <div class="m-4 flex justify-center md:mt-96">
          <a href="/rsvp" class="rounded-xl border bg-white p-2">
            RSVP â†’
          </a>
        </div>
      )
    }
  </body>
</html>
