---
import { z } from "zod";
import Layout from "../../layouts/Layout.astro";
import { getCodeFromName } from "./utils";

const PASSWORD = import.meta.env.PASSWORD;

const schema = z.object({
  name: z
    .string()
    .min(5, "Please enter your name")
    .refine((val) => val.includes(" "), {
      message: "Please enter your full name",
    }),
  password: z
    .string()
    .min(2, "Please enter a password")
    .refine((val) => val.toLowerCase() === PASSWORD, {
      message: "Incorrect password, sorry!",
    }),
});
type D = z.infer<typeof schema>;
const errors: D = { name: "", password: "" };
const data: D = { name: "", password: "" };

if (Astro.request.method === "POST") {
  console.log("Login POST Received");

  const formData = Object.fromEntries(
    (await Astro.request.formData()).entries()
  );
  console.log(`Login Attempt: ${JSON.stringify(formData)}`);
  const result = schema.safeParse(formData);

  if (!result.success) {
    data.name = formData.name?.toString() ?? "";
    errors.name = result.error?.formErrors.fieldErrors.name?.[0] ?? "";
    errors.password = result.error?.formErrors.fieldErrors.password?.[0] ?? "";
  } else {
    const { name } = result.data;
    const code = await getCodeFromName(name);

    if (!code) {
      errors.name = "Not found, please try again.";
    }

    const hasErrors = Object.values(errors).some((msg) => msg);
    if (hasErrors) {
      console.error(`RSVP Login Failed: ${JSON.stringify(errors)}`);
    } else {
      console.log(`RSVP Login Succeed: ${name}, ${code}`);
      return Astro.redirect(`/rsvp/${code}`);
    }
  }
}
---

<Layout>
  <form
    action="/rsvp"
    method="POST"
    class="flex h-full w-full flex-col items-center justify-around pb-24 pr-4 pt-12 align-middle sm:h-3/4"
  >
    <h2 class="text-xl font-bold">Login</h2>
    <div>
      <label class="block" for="name">Name</label>
      <input name="name" value={data?.name} class="rounded" type="text" />
      {errors.name && <p class="text-sm text-red-400">{errors.name}</p>}
    </div>

    <div>
      <label class="block" for="password"> Password </label>
      <input
        name="password"
        value={data?.password}
        class="rounded"
        type="text"
      />
      {errors.password && <p class="text-sm text-red-400">{errors.password}</p>}
    </div>

    <button
      class="rounded border bg-green-900 p-2 text-lg font-bold text-white"
      type="submit"
    >
      Enter
    </button>
  </form>
</Layout>
